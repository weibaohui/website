<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Upload files on Gin Web Framework</title>
    <link>https://gin-gonic.com/api-example/upload-file/</link>
    <description>Recent content in Upload files on Gin Web Framework</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://gin-gonic.com/api-example/upload-file/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Multiple files</title>
      <link>https://gin-gonic.com/api-example/upload-file/multiple-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gin-gonic.com/api-example/upload-file/multiple-file/</guid>
      <description>See the detail example code.
func main() { router := gin.Default() // Set a lower memory limit for multipart forms (default is 32 MiB) 	// router.MaxMultipartMemory = 8 &amp;lt;&amp;lt; 20 // 8 MiB 	router.POST(&amp;#34;/upload&amp;#34;, func(c *gin.Context) { // Multipart form 	form, _ := c.MultipartForm() files := form.File[&amp;#34;upload[]&amp;#34;] for _, file := range files { log.Println(file.Filename) // Upload the file to specific dst. 	// c.SaveUploadedFile(file, dst) 	} c.</description>
    </item>
    
    <item>
      <title>Single file</title>
      <link>https://gin-gonic.com/api-example/upload-file/single-file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gin-gonic.com/api-example/upload-file/single-file/</guid>
      <description>References issue #774 and detail example code.
func main() { router := gin.Default() // Set a lower memory limit for multipart forms (default is 32 MiB) 	// router.MaxMultipartMemory = 8 &amp;lt;&amp;lt; 20 // 8 MiB 	router.POST(&amp;#34;/upload&amp;#34;, func(c *gin.Context) { // single file 	file, _ := c.FormFile(&amp;#34;file&amp;#34;) log.Println(file.Filename) // Upload the file to specific dst. 	// c.SaveUploadedFile(file, dst)  c.String(http.StatusOK, fmt.Sprintf(&amp;#34;&amp;#39;%s&amp;#39; uploaded!&amp;#34;, file.Filename)) }) router.Run(&amp;#34;:8080&amp;#34;) } How to curl:</description>
    </item>
    
  </channel>
</rss>